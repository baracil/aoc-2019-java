package perococco.aoc.day5;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.MethodSource;
import perococco.aoc.computer.Computer;
import perococco.aoc.computer.Program;
import perococco.aoc.computer.io.ProgramIO;
import perococco.aoc.computer.primitive.FixSizeLongValueComputerFactory;

public class Day5Part2ExampleTest {

    public static Object[][] examples() {
        return new Object[][]{
                {"3,9,8,9,10,9,4,9,99,-1,8", "1","0"},
                {"3,9,8,9,10,9,4,9,99,-1,8", "8","1"},
                {"3,9,8,9,10,9,4,9,99,-1,8", "10","0"},

                {"3,9,7,9,10,9,4,9,99,-1,8", "1","1"},
                {"3,9,7,9,10,9,4,9,99,-1,8", "-10","1"},
                {"3,9,7,9,10,9,4,9,99,-1,8", "10","0"},
                {"3,9,7,9,10,9,4,9,99,-1,8", "8","0"},
                {"3,9,7,9,10,9,4,9,99,-1,8", "100","0"},

                {"3,3,1108,-1,8,3,4,3,99","1","0"},
                {"3,3,1108,-1,8,3,4,3,99","8","1"},
                {"3,3,1108,-1,8,3,4,3,99","10","0"},
                {"3,3,1108,-1,8,3,4,3,99","1", "0"},

                {"3,3,1107,-1,8,3,4,3,99", "-10","1"},
                {"3,3,1107,-1,8,3,4,3,99", "10","0"},
                {"3,3,1107,-1,8,3,4,3,99", "8","0"},
                {"3,3,1107,-1,8,3,4,3,99", "100","0"},

                {"3,12,6,12,15,1,13,14,13,4,13,99,-1,0,1,9","0","0"},
                {"3,12,6,12,15,1,13,14,13,4,13,99,-1,0,1,9","12","1"},
                {"3,12,6,12,15,1,13,14,13,4,13,99,-1,0,1,9","-1","1"},

                {"3,3,1105,-1,9,1101,0,0,12,4,12,99,1","0","0"},
                {"3,3,1105,-1,9,1101,0,0,12,4,12,99,1","12","1"},
                {"3,3,1105,-1,9,1101,0,0,12,4,12,99,1","-1","1"},

                {"3,21,1008,21,8,20,1005,20,22,107,8,21,20,1006,20,31,1106,0,36,98,0,0,1002,21,125,20,4,20,1105,1,46,104,999,1105,1,46,1101,1000,1,20,4,20,1105,1,46,98,99", "7","999"},
                {"3,21,1008,21,8,20,1005,20,22,107,8,21,20,1006,20,31,1106,0,36,98,0,0,1002,21,125,20,4,20,1105,1,46,104,999,1105,1,46,1101,1000,1,20,4,20,1105,1,46,98,99", "-1","999"},

                {"3,21,1008,21,8,20,1005,20,22,107,8,21,20,1006,20,31,1106,0,36,98,0,0,1002,21,125,20,4,20,1105,1,46,104,999,1105,1,46,1101,1000,1,20,4,20,1105,1,46,98,99", "8","1000"},

                {"3,21,1008,21,8,20,1005,20,22,107,8,21,20,1006,20,31,1106,0,36,98,0,0,1002,21,125,20,4,20,1105,1,46,104,999,1105,1,46,1101,1000,1,20,4,20,1105,1,46,98,99", "9","1001"},
                {"3,21,1008,21,8,20,1005,20,22,107,8,21,20,1006,20,31,1106,0,36,98,0,0,1002,21,125,20,4,20,1105,1,46,104,999,1105,1,46,1101,1000,1,20,4,20,1105,1,46,98,99", "98","1001"},
                {"3,21,1008,21,8,20,1005,20,22,107,8,21,20,1006,20,31,1106,0,36,98,0,0,1002,21,125,20,4,20,1105,1,46,104,999,1105,1,46,1101,1000,1,20,4,20,1105,1,46,98,99", "10","1001"},
                {"3,21,1008,21,8,20,1005,20,22,107,8,21,20,1006,20,31,1106,0,36,98,0,0,1002,21,125,20,4,20,1105,1,46,104,999,1105,1,46,1101,1000,1,20,4,20,1105,1,46,98,99", "134","1001"},


        };
    }

    @ParameterizedTest
    @MethodSource("examples")
    public void name(String code, String input, String expectedOutput) {
        final Computer computer = new FixSizeLongValueComputerFactory().create();
        final Program program = computer.compile(code);

        final String actualOutput = program.launchAndWait("Test", ProgramIO.fromList(input).ignoreOutput()).getLastOutput();

        Assertions.assertEquals(expectedOutput, actualOutput);


    }
}
